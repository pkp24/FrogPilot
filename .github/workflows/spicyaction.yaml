name: Make spicystaging-temp
on:
  #workflow_run:
    #workflows: ["Sync Fork"]
    #types: 
    #  - completed
  workflow_dispatch:
jobs:
  copy_branch:
    runs-on: ubuntu-latest
    steps:
    - name: Setup Git and Fetch Branches
      run: |
        git init
        git remote add origin https://github.com/${{ github.repository }}.git
        git fetch origin FrogPilot-Staging spicystaging-temp
        # Verify if FrogPilot-Staging exists
        if ! git rev-parse --verify --quiet "origin/FrogPilot-Staging"; then
          echo "Branch FrogPilot-Staging not found"
          exit 1
        fi
        
        # Find the second most recent commit of FrogPilot-Staging
        COMMIT_HASH=$(git rev-parse "origin/FrogPilot-Staging~1")
        echo "COMMIT_HASH=$COMMIT_HASH" >> $GITHUB_ENV
        
    - name: Check and Set Branch Update Requirement
      env:
        COMMIT_HASH: ${{ env.COMMIT_HASH }}
      run: |
        # Check if the most recent relevant commit on spicystaging-temp is different
        LATEST_COMMIT_NOT_BY_EXCLUDED=$(git log origin/spicystaging-temp --not --committer=pkp24 --not --committer=github-actions[bot] --pretty=format:'%H' -n 1)
        if [[ "$LATEST_COMMIT_NOT_BY_EXCLUDED" != "$COMMIT_HASH" ]]; then
          echo "REMAKE_BRANCH=true" >> $GITHUB_ENV
        else
          echo "REMAKE_BRANCH=false" >> $GITHUB_ENV
        fi
        
    - name: Checkout repository
      if: env.REMAKE_BRANCH == 'true'
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Discard local changes and create new branch
      if: env.REMAKE_BRANCH == 'true'
      run: |
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"
        git checkout -B spicystaging-temp ${{ env.COMMIT_HASH }} --force
        
        # Use the GITHUB_TOKEN for authentication
        git push https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} spicystaging-temp --force


